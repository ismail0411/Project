-- write a query that returns the sales data by product, category, region, and time. 

-- total sales data by Products

select p.productName, 
sum(od.unitprice * od.quantity) as product_revenue
from `order details` as od 
join products as P on p.productid = od.productid
group by p.productName
order by product_revenue DESC;

-- total sales data by Category

select c.categoryname, 
sum(od.unitprice * od.quantity) as "total sales generated by categories"
from `order details` as od 
join products as P on p.productid = od.productid
join categories as c on c.categoryid = p.categoryid
group by c.CategoryName
order by "total sales generated byÂ categories";

-- total sales databy region

select r.regiondescription,
sum(od.unitprice * od.quantity) as total_sales
from `order details` as od 
join products as P on p.productid = od.productid
join categories as ca on p.categoryid = ca.categoryid
join region as r on r.regionid
group by r.regiondescription
order by total_sales;

-- total sales data by time

select year(o.orderdate) as `Order per year`,
sum(od.unitprice * od.quantity) as total_revenue,
sum(od.Quantity) as `total quantity`
from `order details` as od 
join products as P on p.productid = od.productid
join categories as c on c.categoryid = p.categoryid
join orders as o on o.orderid = od.orderid
group by o.OrderDate
order by `Order per year`;

-- Customer purchase patterns

select c.CustomerID, c.CompanyName, o.orderid, o.OrderDate,
count(o.orderid) as totalorders,
sum(od.unitprice * od.quantity) as `Amountspent`,
max(o.OrderDate) as productpurchasedate, productname,
count(p.categoryid) as categoriespurchased 
from Customers as c
Join orders as o on c.customerid = o.customerid
join `order details` as od on o.orderid = od.orderid
Join products as p on od.productid = p.productid
group by c.CustomerID, c.CompanyName, o.orderid, o.orderdate, p.productname
order by `Amountspent` DESC;

-- history by order

select o.orderid, c.customerid, c.companyname, o.orderdate,
count(distinct od.productid) as Totalproducts,
sum(od.unitprice * od.quantity) as Totalorders
from orders as o
join customers as c on c.customerid = o.customerid
join `order details` as od on o.orderid = od.orderid
join products as p on p.productid = od.productid
join categories as ca on ca.categoryid = p.categoryid
group by o.orderid, c.customerid, c.companyname, o.orderdate
order by o.orderdate;

-- Analyze order fulfillment process

select o.orderid, o.orderdate, o.requireddate, o.shippeddate,
datediff(o.shippeddate, o.orderdate) as `fulfillment days`,
datediff(o.shippeddate, o.requireddate) as BeforedeadlineDays, 
s.companyname as shipper, o.freight,
CASE
    when o.shippeddate > o.requireddate then 'delayed'
    Else 'on time'
End as 'status',
sum(od.unitprice * od.quantity) as TotalOrder
from orders as o
Join shippers s on o.shipvia = s.shipperid
join `order details` as od on o.orderid = od.orderid
group by o.orderid, o.orderdate, o.requireddate, o.shippeddate
order by `fulfillment days` DESC;

-- Delivery times

select OD.orderid, shipvia, shipname, requireddate, shippeddate, 
datediff(requireddate, shippeddate) as `Delivery days` 
from `order details` OD
join orders O on OD.orderid = O.orderid
order by `Delivery days` DESC;
